{"version":3,"sources":["index.js"],"names":["Tweets","props","className","src","alt","data","name","scrname","Date","created","toDateString","split","slice","join","tweet","fav","rts","App","getUsers","query","self","axios","method","url","responseType","then","response","console","log","setState","users","loading","getTweets","tweets","userTweets","tweetsLoaded","dataChange","e","search","target","value","state","selectedUser","class","bind","changePage","this","id","type","list","onChange","map","i","key","screen_name","onClick","text","imageUrl","proImage","retweets","favourites","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad267657.chunk.js","sourcesContent":["import 'react-app-polyfill/ie9';\n\nimport 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'raf/polyfill';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\n\nfunction Tweets(props) {\n  return (\n    <div className=\"card m-4\" >\n      <div className=\"card-body\">\n        <div className=\"card-heading\">\n          <img src=\"https://picsum.photos/40\" alt=\"Profile Image\" className=\"img-fluid rounded-circle m-2\"/>  \n          <div className=\"my-auto\">\n            <h5 className=\"card-title\">{props.data.name}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">@{props.data.scrname}</h6>\n          </div>\n          <span className=\"ml-auto\">{new Date(props.data.created).toDateString().split(\" \").slice(1,4).join(\" \")}</span>\n        </div>\n        <p className=\"card-text\">{props.data.tweet}</p>\n        <p>\n          <span><i className=\"far fa-heart\"></i>{props.data.fav}</span>\n          <span><i className=\"fas fa-retweet\"></i>{props.data.rts}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component{\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        search : '',\n        users: [],\n        selectedUser: {},\n        userTweets:[],\n        tweetsLoaded: false,\n        loading: true,\n        class: \"bar\",\n      };\n  \n      // This binding is necessary to make `this` work in the callback\n      this.getUsers = this.getUsers.bind(this);\n      this.changePage = this.changePage.bind(this);\n    }\n    \n    changePage() {\n      this.setState({\n        class: \"barTop\",\n        selectedUser: this.state.users[0]\n      },() => {\n        this.getTweets(this.state.selectedUser.id);\n      })\n    }\n\n    getUsers = (query) => {\n        var self = this;\n        if (query){\n            axios({ method: 'get', url: 'https://serene-crag-06856.herokuapp.com/api/users?q=' + query, responseType: 'json' })\n            .then( (response) => {\n                console.log(response.data);\n                self.setState({\n                    users: response.data.users,\n                    loading: false\n                })\n            });\n        }\n    }\n\n    getTweets = (query) => {\n      var self = this;\n        if (query){\n            axios({ method: 'get', url: 'https://serene-crag-06856.herokuapp.com/api/tweets?uid=' + query, responseType: 'json' })\n            .then(function (response) {\n                console.log(response.data.tweets);\n                self.setState({\n                  userTweets: [...response.data.tweets],\n                  tweetsLoaded: true,\n                })\n            });\n        }\n    }\n\n    dataChange = (e) => {\n      this.setState({\n        search: e.target.value,\n      });\n      this.getUsers(e.target.value);\n    }\n  \n    render(){\n      return (\n        <>\n          <div className={this.state.class}>\n            <div id=\"title\" className=\"d-none d-sm-inline-block d-lg-inline-block d-xl-dlock\">\n            <span>TWEET</span><i className=\"fab fa-twitter bar-fa-twitter\"></i><span>SEARCH</span>\n            </div>\n            <div id=\"search-bar\">\n              <i className=\"fa fa-search bar-fa-search\"></i>\n              <input type=\"text\" name=\"search\" list=\"users\" value={this.state.search} \n                onChange={ this.dataChange.bind(this) } />\n              <datalist id=\"users\">\n                { this.state.loading ? \"\" : this.state.users.map( (data,i) => <option value={data.name} key={i}>@{data.screen_name}</option>)}\n              </datalist>\n            </div>\n            <button className=\"btn btn-primary\" onClick={this.changePage}>Search</button>\n          </div>\n          { this.state.tweetsLoaded ?\n          <div className=\"content\">\n            { this.state.userTweets.map( (tweets,i) => <Tweets key={i} data={{\n              name: this.state.selectedUser.name,\n              scrname: this.state.selectedUser.screen_name,\n              tweet: tweets.text,\n              imageUrl: this.state.selectedUser.proImage,\n              rts: tweets.retweets,\n              fav: tweets.favourites,\n              created: tweets.created\n            }}/>) }\n          </div> : \"\"}\n        </>\n      );\n    }\n  }\n  \nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}